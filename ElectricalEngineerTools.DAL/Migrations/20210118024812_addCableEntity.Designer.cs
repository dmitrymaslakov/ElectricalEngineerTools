// <auto-generated />
using System;
using ElectricalEngineerTools.DAL.ContextDb;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ElectricalEngineerTools.DAL.Migrations
{
    [DbContext(typeof(ElectricsContext))]
    [Migration("20210118024812_addCableEntity")]
    partial class addCableEntity
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ElectricalEngineerTools.DAL.Entities.Cable", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("char(36)");

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("CoresNumber")
                        .HasColumnType("int");

                    b.Property<Guid>("LightingFixtureId")
                        .HasColumnType("char(36)");

                    b.Property<double>("Section")
                        .HasColumnType("double");

                    b.HasKey("Id");

                    b.HasIndex("LightingFixtureId")
                        .IsUnique();

                    b.ToTable("Cables");
                });

            modelBuilder.Entity("ElectricalEngineerTools.DAL.Entities.LightingFixture", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("char(36)");

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("ClimaticModification")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("DiffuserMaterial")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("IP")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<bool>("IsFireproof")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Manufacturer")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<double>("Power")
                        .HasColumnType("double");

                    b.HasKey("Id");

                    b.ToTable("LightingFixtures");
                });

            modelBuilder.Entity("ElectricalEngineerTools.DAL.Entities.Cable", b =>
                {
                    b.HasOne("ElectricalEngineerTools.DAL.Entities.LightingFixture", "LightingFixture")
                        .WithOne("Cable")
                        .HasForeignKey("ElectricalEngineerTools.DAL.Entities.Cable", "LightingFixtureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
